postgres:
  fullnameOverride: &bpdmPostgres "bpdm-snapshot-postgres"
  auth:
    postgresPassword: <path:bpdm/data/int/bpdm/postgresql#postgres-password>
    password: <path:bpdm/data/int/bpdm/postgresql#password>

centralidp:
  enabled: false

bpdm-gate:
  image:
    tag: "6.2.0-SNAPSHOT"
  ingress:
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
    enabled: true
    hosts:
      - host: business-partners-snapshot.int.catena-x.net
        paths:
          - path: "/companies/test-company"
            pathType: Prefix
    tls:
      - secretName: tls-secret-bpdm-gate-snapshot
        hosts:
          - business-partners-snapshot.int.catena-x.net
  livenessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/companies/test-company"
    bpdm:
      datasource:
        host: *bpdmPostgres
      client:
        pool:
          base-url: "https://business-partners-snapshot.int.catena-x.net/pool"
          registration:
            client-id: <path:bpdm/data/int/bpdm/gates/portal/pool-client#client-id>
        orchestrator:
          base-url: "https://business-partners-snapshot.int.catena-x.net/orchestrator"
          registration:
            client-id: <path:bpdm/data/int/bpdm/gates/portal/orchestrator-client#client-id>
      security:
        auth-server-url: https://centralidp.int.catena-x.net/auth
        permissions:
          uploadInputPartner: write_input_partner
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/int/bpdm/postgresql#password>
    bpdm:
      client:
        pool:
          registration:
            client-secret: <path:bpdm/data/int/bpdm/gates/portal/pool-client#client-secret>
        orchestrator:
          registration:
            client-secret: <path:bpdm/data/int/bpdm/gates/portal/orchestrator-client#client-secret>

bpdm-pool:
  image:
    tag: "6.2.0-SNAPSHOT"
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners-snapshot.int.catena-x.net
        paths:
          - path: /pool
            pathType: Prefix
    tls:
      - secretName: tls-secret-bpdm-pool-snapshot
        hosts:
          - business-partners-snapshot.int.catena-x.net
  livenessProbe:
    httpGet:
      path: "/pool/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/pool"
    bpdm:
      datasource:
        host: *bpdmPostgres
      client:
        orchestrator:
          base-url: "https://business-partners-snapshot.int.catena-x.net/orchestrator"
          registration:
            client-id: <path:bpdm/data/int/bpdm/pool/orchestrator-client#client-id>
      security:
        auth-server-url: https://centralidp.int.catena-x.net/auth
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/int/bpdm/postgresql#password>
    bpdm:
      client:
        orchestrator:
          registration:
            client-secret: <path:bpdm/data/int/bpdm/pool/orchestrator-client#client-secret>

bpdm-orchestrator:
  image:
    tag: "6.2.0-SNAPSHOT"
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners-snapshot.int.catena-x.net
        paths:
          - path: /orchestrator
            pathType: Prefix
    tls:
      - secretName: tls-secret-bpdm-orchestrator-snapshot
        hosts:
          - business-partners-snapshot.int.catena-x.net
  livenessProbe:
    httpGet:
      path: "orchestrator/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "orchestrator/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "orchestrator/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/orchestrator"
    bpdm:
      datasource:
        host: *bpdmPostgres
      security:
        auth-server-url: https://centralidp.int.catena-x.net/auth
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/int/bpdm/postgresql#password>

bpdm-cleaning-service-dummy:
  image:
    tag: "6.2.0-SNAPSHOT"
  enabled: true
  applicationConfig:
    bpdm:
      client:
        orchestrator:
          base-url: "https://business-partners-snapshot.int.catena-x.net/orchestrator"
          provider:
            issuer-uri: https://centralidp.int.catena-x.net/auth/realms/CX-Central
          registration:
            client-id: <path:bpdm/data/int/bpdm/cleaning-service/orchestrator-client#client-id>
  applicationSecrets:
    bpdm:
      client:
        orchestrator:
          registration:
            client-secret:  <path:bpdm/data/int/bpdm/cleaning-service/orchestrator-client#client-secret>